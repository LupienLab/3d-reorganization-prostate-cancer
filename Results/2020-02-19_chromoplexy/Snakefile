# ==============================================================================
# Environment
# ==============================================================================
import os.path as path
import pandas as pd

CONFIG = pd.read_csv(
    path.join("..", "..", "Data", "External", "LowC_Samples_Data_Available.tsv"),
    sep="\t",
    header=0
)
SAMPLES = ["PCa" + str(i) for i in CONFIG.loc[CONFIG.Include == "Yes", "Sample ID"]]

ACETYL_DIR = "Acetylation"
GRAPH_DIR = "Graphs"
PLOT_DIR = "Plots"
TRACK_DIR = "Tracks"
BREAK_DIR = path.join("..", "2019-07-24_breakfinder", "Breakpoints", "Default")
TAD_DIR = path.join("..", "2020-01-15_TAD-aggregation", "resolved-TADs")
CHIP_DIR = path.join("..", "..", "Data", "Processed", "2019-05-03_PCa-H3K27ac-peaks", "BAMs")

PLOT_EXTS = ["png", "pdf"]

# ==============================================================================
# Meta Rules
# ==============================================================================
rule all:
    input:
        path.join(GRAPH_DIR, "breakpoints.per-sample.merged-breakpoints.p"),
        path.join(GRAPH_DIR, "sv-breakpoints.tsv"),
        path.join(GRAPH_DIR, "sv-breakpoints.paired.tsv"),
        path.join(GRAPH_DIR, "breakpoints.all-samples.p"),
        path.join(GRAPH_DIR, "sv-disruption-tests.tsv"),
        path.join(GRAPH_DIR, "breakpoints.all-samples.xml"),
        expand(
            path.join(GRAPH_DIR, "breakpoints.{sample}.xml"),
            sample=SAMPLES
        ),
        expand(
            path.join(TRACK_DIR, "{sample}.breaks.{track}"),
            sample=SAMPLES,
            track=["beddb", "bed2ddb"],
        ),
        path.join("Statistics", "breakpoints.binned.tsv"),
        path.join("Statistics", "breakpoints.by-chrom.tsv"),
        path.join("Statistics", "breakpoint-pairs.inter-intra-chromosomal.tsv"),
        path.join("Statistics", "sv-components.tsv"),
        path.join("Statistics", "sv-components.counts.tsv"),
        expand(
            path.join(PLOT_DIR, "Circos", "{sample}.circos.{ext}"),
            sample=SAMPLES,
            ext=PLOT_EXTS,
        ),
        expand(
            path.join(PLOT_DIR, "breakpoint-stats", "{plot}.{ext}"),
            plot=[
                "breakpoint-counts",
                "breakpoint-counts.by-chrom",
                "breakpoint-counts.by-chrom.labelled",
                "breakpoint-pairs.distance-distribution",
                "breakpoint-pairs.inter-intra-chromosomal",
                "breakpoint-pairs.inter-intra-chromosomal.T2E-total",
                "breakpoint-pairs.inter-intra-chromosomal.T2E-comparison",
                "breakpoint-recurrence",
                "sv-events.chromosomes",
                "sv-events.complex.T2E-comparison",
                "sv-events.size",
                "sv-events.total.T2E-comparison",
            ],
            ext=PLOT_EXTS,
        ),

# ==============================================================================
# Rules
# ==============================================================================
rule graphs:
    input:
        script = "breakpoint-components.py",
        breaks = expand(
            path.join(BREAK_DIR, "{sample}.breaks.sorted.manually-resolved.tsv"),
            sample=SAMPLES
        ),
        tads = expand(
            path.join(TAD_DIR, "separated-TADs", "{sample}.40000bp.w_3.domains.bed"),
            sample=SAMPLES
        ),
    output:
        path.join(GRAPH_DIR, "breakpoints.per-sample.merged-breakpoints.p"),
        path.join(GRAPH_DIR, "sv-breakpoints.tsv"),
        path.join(GRAPH_DIR, "sv-breakpoints.paired.tsv"),
        path.join(GRAPH_DIR, "breakpoints.all-samples.p"),
        path.join(GRAPH_DIR, "sv-disruption-tests.tsv"),
        path.join(GRAPH_DIR, "breakpoints.all-samples.xml"),
        path.join("Statistics", "breakpoint-components.tsv"),
        expand(
            path.join(GRAPH_DIR, "breakpoints.{sample}.xml"),
            sample=SAMPLES
        ),
    shell:
        "python {input.script}"

rule clodius_1d:
    input:
        path.join(GRAPH_DIR, "sv-breakpoints.tsv"),
    output:
        path.join(TRACK_DIR, "{sample}.breaks.beddb"),
    params:
        "-a hg38 --no-header"
    shell:
        # printing liens twice with columns switched means regions will be highlighted both above and below the diagonal in the contact matrix
        "clodius aggregate bedfile {params} -o {output} <(awk '{{FS=OFS=\"\\t\"}}{{if ($4 == \"{wildcards.sample}\") print}}' {input})"

rule clodius_2d:
    input:
        path.join(GRAPH_DIR, "sv-breakpoints.paired.tsv"),
    output:
        path.join(TRACK_DIR, "{sample}.breaks.bed2ddb"),
    params:
        "-a hg38 --chr1-col 1 --from1-col 2 --to1-col 3 --chr2-col 4 --from2-col 5 --to2-col 6 --no-header"
    shell:
        # printing liens twice with columns switched means regions will be highlighted both above and below the diagonal in the contact matrix
        "clodius aggregate bedpe {params} -o {output} <(awk '{{FS=OFS=\"\\t\"}}{{if ($11 == \"{wildcards.sample}\") {{print $1, $2, $3, $4, $5, $6; print $4, $5, $6, $1, $2, $3}} }}' {input})"

rule summarize_breaks:
    input:
        script = "summarize-breaks.R",
        breaks = path.join(GRAPH_DIR, "sv-breakpoints.tsv"),
        pairs = path.join(GRAPH_DIR, "sv-breakpoints.paired.tsv"),
    output:
        path.join("Statistics", "breakpoints.binned.tsv"),
        path.join("Statistics", "breakpoints.by-chrom.tsv"),
        path.join("Statistics", "breakpoint-pairs.inter-intra-chromosomal.tsv"),
        path.join("Statistics", "sv-components.tsv"),
        path.join("Statistics", "sv-components.counts.tsv"),
    shell:
        "Rscript {input.script}"

rule plot_breaks:
    input:
        script = "plot-breaks.R",
        breaks = path.join(GRAPH_DIR, "sv-breakpoints.tsv"),
        pairs = path.join(GRAPH_DIR, "sv-breakpoints.paired.tsv"),
        bp_chr = path.join("Statistics", "breakpoints.by-chrom.tsv"),
        bp_bins = path.join("Statistics", "breakpoints.binned.tsv"),
        pairs_chr = path.join("Statistics", "breakpoint-pairs.inter-intra-chromosomal.tsv"),
        events = path.join("Statistics", "sv-components.tsv"),
        event_counts = path.join("Statistics", "sv-components.counts.tsv"),
        htests = path.join("Statistics", "htests.rds"),
    output:
        expand(
            path.join(PLOT_DIR, "Circos", "{sample}.circos.{ext}"),
            sample=SAMPLES,
            ext=PLOT_EXTS,
        ),
        expand(
            path.join(PLOT_DIR, "breakpoint-stats", "{plot}.{ext}"),
            plot=[
                "breakpoint-counts",
                "breakpoint-counts.by-chrom",
                "breakpoint-counts.by-chrom.labelled",
                "breakpoint-pairs.distance-distribution",
                "breakpoint-pairs.inter-intra-chromosomal",
                "breakpoint-pairs.inter-intra-chromosomal.T2E-total",
                "breakpoint-pairs.inter-intra-chromosomal.T2E-comparison",
                "breakpoint-recurrence",
                "sv-events.chromosomes",
                "sv-events.complex.T2E-comparison",
                "sv-events.size",
                "sv-events.total.T2E-comparison",
            ],
            ext=PLOT_EXTS,
        ),
    shell:
        "Rscript {input.script}"
