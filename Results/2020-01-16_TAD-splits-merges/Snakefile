import pandas as pd
import os.path as path
from os import getcwd

# =============================================================================
# Configuration
# =============================================================================
CONFIG = pd.read_csv(
    path.join("..", "2020-01-15_TAD-aggregation", "config.tsv"),
    index_col=False, sep="\t"
)

CONTACT_DIR = path.join("..", "..", "Data", "Processed", "2019-06-18_PCa-LowC-sequencing", "Contacts")
TMP_DIR = "TMP"

SAMPLES = ["PCa" + str(i) for i in CONFIG.loc[CONFIG.Include == "Yes", "Sample ID"]]

CHRS = ["chr" + str(i) for i in list(range(1, 23)) + ["X"]]
RESOLUTIONS = [40000]
WINDOWS = range(3, 41)


# =============================================================================
# Meta Rules
# =============================================================================
rule all:
    input:
        expand(
            path.join("Comparison", "{chrom}", "{s1}-{s2}", "{s1}.TAD.txt"),
            chrom=["chr19"],
            s1=SAMPLES,
            s2=SAMPLES,
        ),
        # expand(
        #     path.join("Comparison", "{chrom}", "{s1}-{s2}", "{s2}.TAD.txt"),
        #     chrom=CHRS,
        #     s1=SAMPLES,
        #     s2=SAMPLES,
        # ),
        # expand(
        #     path.join("Comparison", "{chrom}", "{s1}-{s2}", "{s2}.TAD.txt"),
        #     chrom=CHRS,
        #     s1=SAMPLES,
        #     s2=SAMPLES,
        # ),
        # expand(
        #     path.join("Comparison", "{chrom}", "{s1}-{s2}", "{s1}-{s2}.all.{ext}.txt"),
        #     chrom=CHRS,
        #     s1=SAMPLES,
        #     s2=SAMPLES,
        #     ext=["merge", "split"],
        # ),
        # expand(
        #     path.join("Comparison", "{chrom}", "{s1}-{s2}", "{s2}-{s1}.all.{ext}.txt"),
        #     chrom=CHRS,
        #     s1=SAMPLES,
        #     s2=SAMPLES,
        #     ext=["merge", "split"],
        # ),


# =============================================================================
# Rules
# =============================================================================
rule dump_mat:
    input:
        path.join(CONTACT_DIR, "{sample}.mcool")
    output:
        temp(path.join(TMP_DIR, "{sample}.{res}bp.{chrom}.annotated.mtx")),
    params:
        "-H -b --one-based-ids --annotate chrom,start,end"
    shell:
        "cooler dump {params} -r {wildcards.chrom} -o {output} {input}::/resolutions/{wildcards.res}"

rule dump2wide:
    input:
        script = "sparse2wide.R",
        data = path.join(TMP_DIR, "{sample}.{res}bp.{chrom}.annotated.mtx"),
    output:
        temp(path.join(TMP_DIR, "{sample}.{res}bp.{chrom}.wide.mtx")),
    shell:
        "Rscript {input.script} {input.data} -p {TMP_DIR}/{wildcards.sample}.{wildcards.res}bp.{wildcards.chrom}"

rule tadsplimer:
    input:
        s1 = path.join(TMP_DIR, "{s1}.40000bp.{chrom}.wide.mtx"),
        s2 = path.join(TMP_DIR, "{s2}.40000bp.{chrom}.wide.mtx"),
    output:
        path.join("Comparison", "{chrom}", "{s1}-{s2}", "{s1}.TAD.txt"),
        path.join("Comparison", "{chrom}", "{s1}-{s2}", "{s2}.TAD.txt"),
        path.join("Comparison", "{chrom}", "{s1}-{s2}", "{s1}-{s2}.all.merge.txt"),
        path.join("Comparison", "{chrom}", "{s1}-{s2}", "{s1}-{s2}.all.split.txt"),
        path.join("Comparison", "{chrom}", "{s1}-{s2}", "{s2}-{s1}.all.merge.txt"),
        path.join("Comparison", "{chrom}", "{s1}-{s2}", "{s2}-{s1}.all.split.txt"),
    wildcard_constraints:
        chrom = "chr[XY0-9]+",
    params:
        local_dir = path.abspath(getcwd()),
        container_dir = "/data",
    shell:
        "docker run -v {params.local_dir}:{params.container_dir} -t guangywang/tadsplimer:v1.0.3 python3 /bin/TADsplimer.py split_TADs -c {params.container_dir}/{input.s1},{params.container_dir}/{input.s2} --contact_maps_aliases {wildcards.s1},{wildcards.s2} -o {params.container_dir}/Comparison/{wildcards.chrom}/{wildcards.s1}-{wildcards.s2}"
