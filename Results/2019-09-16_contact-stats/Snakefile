import pandas as pd
import os.path as path

# ==============================================================================
# Configuration
# ==============================================================================
CONFIG = pd.read_csv('../../Data/External/LowC_Samples_Data_Available.tsv', sep='\t', index_col=False)

SAMPLE_IDS = CONFIG['Sample ID'].tolist()
SAMPLES = ['PCa' + str(i) for i in CONFIG['Sample ID'].tolist()]

REPORT_DIR = 'Reports'
SCRIPT_DIR = 'Scripts'
PLOT_DIR = 'Plots'
CONTACT_DIR = path.join('..', '..', 'Data', 'Processed', '2019-06-18_PCa-LowC-sequencing', 'Contacts')

CHRS = ['chr' + str(i) for i in list(range(1, 23)) + ['X', 'Y']]

# ==============================================================================
# Meta Rules
# ==============================================================================
rule all:
    input:
        # path.join(REPORT_DIR, 'rulegraph.png'),
        # path.join(REPORT_DIR, 'snakemake_report.html'),
        # expand('Sparse/{sample}.4000bp.{chrom}.mtx', sample=SAMPLES, chrom=CHRS)
        # expand('Annotations/{sample}.enhancer-bounds.bed', sample=SAMPLES)
        expand(path.join(PLOT_DIR, '{sample}.distance-counts.png'), sample=SAMPLES)

# ==============================================================================
# Rules
# ==============================================================================
rule contact_dists:
    input:
        script = path.join(SCRIPT_DIR, 'contact-distributions.py'),
        cool = path.join(CONTACT_DIR, '{sample}.mcool')
    output:
        table = path.join('distance-counts', '{sample}.tsv'),
        plot = path.join(PLOT_DIR, '{sample}.distance-counts.png')
    shell:
        "python {input.script} {input.cool}::/resolutions/1000 -t {output.table} -p {output.plot}"
