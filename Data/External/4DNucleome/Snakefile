# =============================================================================================================================
# Configuration
# =============================================================================================================================
import pandas as pd
import os.path as path

CONFIG = pd.read_csv("config.tsv", index_col=False, sep="\t")

REPORT_DIR = "Reports"
CONTACT_DIR = "Contacts"

SAMPLES = CONFIG["File Accession"].tolist()

RESOLUTIONS = [
    2000, 3000, 4000, 5000,
    10000, 20000, 30000, 40000, 50000,
    100000, 200000, 300000, 400000, 500000,
    1000000, 2000000, 3000000, 4000000, 5000000
]

# =============================================================================================================================
# Meta Rules
# =============================================================================================================================
rule all:
    input:
        expand(
            path.join(CONTACT_DIR, "{sample}.mcool"),
            sample=SAMPLES
        ),

# =============================================================================================================================
# Rules
# =============================================================================================================================
rule download_4dn:
    output:
        path.join(CONTACT_DIR, "{sample}.mcool"),
    wildcard_constraints:
        sample="4DN[A-Z0-9]+"
    params:
        url=lambda wildcards: "https://data.4dnucleome.org/files-processed/{sample}/@@download/{sample}.mcool".format(sample=wildcards.sample)
    shell:
        "pushd {CONTACT_DIR}; curl -O -L {params.url}; popd;"

rule balance:
    input:
        path.join(CONTACT_DIR, "{sample}.cool")
    output:
        path.join(REPORT_DIR, "{sample}.balanced_report.txt")
    shell:
        "cooler balance {input} >> {output} 2>&1"

rule adjust_res:
    input:
        path.join(CONTACT_DIR, "{sample}.cool")
    output:
        path.join(CONTACT_DIR, "{sample}.mcool")
    params:
        "--balance -p 8 -r {}".format(",".join([str(r) for r in RESOLUTIONS]))
    shell:
        "cooler zoomify {params} -o {output} {input}"

