import pandas as pd
import numpy as np
import os.path as path

# ==============================================================================
# Configuration
# ==============================================================================
CONFIG = pd.read_csv('config.tsv', index_col=False, sep='\t')

FASTQ_DIR = 'FASTQs'
ALIGN_DIR = 'Aligned'
PEAK_DIR = 'Peaks'
REPORT_DIR = 'Reports'

SAMPLES = CONFIG['SampleID'].tolist()
INDICES = CONFIG['Index'].tolist()
PULLDOWNS = CONFIG['Pulldown'].tolist()
LANES = CONFIG['Lane'].tolist()

GENOMES = ['hg19', 'hg38']
BWT2_IDX = {
    'hg19': '/mnt/work1/data/genomes/human/hg19/iGenomes/Sequence/Bowtie2Index/genome',
    'hg38': '/mnt/work1/data/genomes/human/hg38/iGenomes/Sequence/Bowtie2Index/genome',
}


# ==============================================================================
# Meta Rules
# ==============================================================================
rule all:
    input:
        expand(
            path.join(
                REPORT_DIR, 'Pca_{sample}_{pull}_{index}_L00{lane}_R1_fastqc.html'),
            zip,
            sample=SAMPLES,
            pull=PULLDOWNS,
            index=INDICES,
            lane=LANES
        ),
        expand(
            path.join(ALIGN_DIR, 'hg38',
                      'Pca_{sample}_{pull}_{index}_L00{lane}.sorted.dedup.bam'),
            zip,
            sample=SAMPLES,
            pull=PULLDOWNS,
            index=INDICES,
            lane=LANES
        ),

# ==============================================================================
# Rules
# ==============================================================================
rule fastqc:
    input:
        path.join(FASTQ_DIR, 'Sample_Pca_{sample}_{pull}',
                  'Pca_{sample}_{pull}_{index}_L00{lane}_R1.fastq.gz')
    output:
        path.join(
            REPORT_DIR, 'Pca_{sample}_{pull}_{index}_L00{lane}_R1_fastqc.html')
    params:
        '-o {}'.format(REPORT_DIR)
    conda:
        '/mnt/work1/users/home2/hawleyj/Source/Terminal/Anaconda/ChIPseq.yaml'
    shell:
        'fastqc {params} {input}'

# Alignment
# ------------------------------------------------------------------------------
rule align_hg38:
    input:
        path.join(FASTQ_DIR, 'Sample_Pca_{sample}_{pull}',
                  'Pca_{sample}_{pull}_{index}_L00{lane}_R1.fastq.gz')
    output:
        bam = protected(path.join(ALIGN_DIR, 'hg38',
                                  '{sample}_{pull}_{index}_L00{lane}.bam')),
        rpt = path.join(
            REPORT_DIR, 'hg38', 'Pca_{sample}_{pull}_{index}_L00{lane}.alignment_report.txt')
    params:
        '-x {}'.format(BWT2_IDX['hg38'])
    conda:
        '/mnt/work1/users/home2/hawleyj/Source/Terminal/Anaconda/ChIPseq.yaml'
    shell:
        'bowtie2 {params} -U {input} 2> {output.rpt} | samtools view -u > {output.bam}'

rule align_hg19:
    input:
        path.join(FASTQ_DIR, 'Sample_Pca_{sample}_{pull}',
                  'Pca_{sample}_{pull}_{index}_L00{lane}_R1.fastq.gz')
    output:
        bam = protected(path.join(ALIGN_DIR, 'hg19',
                                  '{sample}_{pull}_{index}_L00{lane}.bam')),
        rpt = path.join(
            REPORT_DIR, 'hg19', 'Pca_{sample}_{pull}_{index}_L00{lane}.alignment_report.txt')
    params:
        '-x {}'.format(BWT2_IDX['hg19'])
    conda:
        '/mnt/work1/users/home2/hawleyj/Source/Terminal/Anaconda/ChIPseq.yaml'
    shell:
        'bowtie2 {params} -U {input} 2> {output.rpt} | samtools view -u > {output.bam}'

# Deduplicate
# ------------------------------------------------------------------------------
rule dedup:
    input:
        '{file}.bam'
    output:
        '{file}.dedup.bam'
    conda:
        '/mnt/work1/users/home2/hawleyj/Source/Terminal/Anaconda/ChIPseq.yaml'
    shell:
        'sambamba markdup -r -p {input} {output}'

# Sort
# ------------------------------------------------------------------------------
rule sort:
    input:
        '{file}.bam'
    output:
        '{file}.sorted.bam',
        '{file}.sorted.bam.bai'
    conda:
        '/mnt/work1/users/home2/hawleyj/Source/Terminal/Anaconda/ChIPseq.yaml'
    shell:
        'sambamba sort {input}'
