import pandas as pd
import os.path as path

# ==============================================================================
# Configuration
# ==============================================================================
META = pd.read_csv(
    path.join("..", "..", "LowC_Samples_Data_Available.tsv"),
    sep="\t"
)
META = META.loc[META["Include"] == "Yes", :]
SAMPLES = ["PCa" + str(i) for i in META["Sample ID"]]

# ==============================================================================
# Meta Rules
# ==============================================================================
rule all:
    input:
        expand("{sample}.tsv", sample=SAMPLES),
        expand("{sample}.bed", sample=SAMPLES),
        expand("{sample}.hg38.sorted.bed", sample=SAMPLES),

# ==============================================================================
# Rules
# ==============================================================================
rule vcf2tsv:
    input:
        '{sample}_filtered_somatic.bnd-updated.vcf'
    output:
        '{sample}.tsv'
    shell:
        './svprops/src/svprops {input} > {output}'

rule tsv2bed:
    input:
        script = "delly-tsv-to-bed.awk",
        data = '{sample}.tsv'
    output:
        '{sample}.bed'
    shell:
        'grep -v "^#" {input.data} | awk -f {input.script} > {output}'

rule liftover:
    input:
        script = "liftover.R",
        vcf = "{sample}.bed",
        chain = "../../hg19ToHg38.over.chain",
    output:
        "{sample}.hg38.bed"
    shell:
        "Rscript {input.script} {input.vcf} {output}"

rule sort:
    input:
        "{sample}.hg38.bed",
    output:
        "{sample}.hg38.sorted.bed"
    shell:
        "sort -k1,1 -V -k2,2n {input} > {output}"

