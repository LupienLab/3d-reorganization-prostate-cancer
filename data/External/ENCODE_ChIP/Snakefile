import pandas as pd
import os.path as path

# ==============================================================================
# Configuration
# ==============================================================================
CONFIG = pd.read_csv('config.tsv', index_col=False, sep='\t')

# ==============================================================================
# Meta Rules
# ==============================================================================
rule all:
    input:
        expand(
            "{cell}_{factor}_{peakset}.canonical.sorted.bed",
            zip,
            cell=CONFIG["Cell"].tolist(),
            factor=CONFIG["Factor"].tolist(),
            peakset=CONFIG["Peakset"].tolist()
        )

# ==============================================================================
# Rules
# ==============================================================================
rule rename:
    input:
        lambda wildcards: "{acc}.bed".format(
            acc=CONFIG.loc[
                (CONFIG["Cell"] == wildcards.cell) & (CONFIG["Factor"] == wildcards.factor) & (CONFIG["Peakset"] == wildcards.peakset),
                "Accession"
            ].values[0])
    output:
        "{cell}_{factor}_{peakset}.bed"
    shell:
        "mv {input} {output}"

rule sort:
    input:
        "{file}.bed"
    output:
        "{file}.sorted.bed"
    shell:
        "sort -k1,1 -V -k2,2n {input} > {output}"

rule keep_canonical:
    input:
        "{file}.bed"
    output:
        "{file}.canonical.bed"
    shell:
        "grep -P '^chr[XYM]?[0-9]{{0,2}}\\t' {input} > {output}"
